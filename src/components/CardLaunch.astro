---
interface Props {
  mission_patch_small : string,
  mission_name : string,
  flight_number: number,
  details: string,
  status: boolean
}
const {mission_patch_small, mission_name, flight_number, details, status  } = Astro.props
const sussess = status ? 'Success' : 'Failled'
---
<l1 class="link-card bg-gray-900 border border-gray-800" role="listitem">
  <a href={`launch/${flight_number}`}>
    <figure class="flex justify-center py-4 min-h-72">
      {mission_patch_small && <img
        src={mission_patch_small}
        alt={mission_name}
				class="z-10 image"
				style={`view-transition-name: image-${flight_number}`}
      />}
    </figure>
    <div class="p-4 text-center">
      <h2 class="text-2xl font-semibold">Fligth #{flight_number}</h2>
      <p>{mission_name}</p>
      <span
      class:list={[
        status ? 'm-5 px-4 py-1 bg-green-50 hover:bg-green-100 text-green-900 rounded-full text-sm font-semibold':'m-5 px-4 py-1 bg-red-50 hover:bg-red-100 text-red-900 rounded-full text-sm font-semibold'
    ] }
        >{sussess}</span
      >
    </div>
  </a>
</l1>
<style>
  .link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.8s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
  .link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}

</style>